{
  "results": {
    "arc_challenge_ragtop5": {
      "alias": "arc_challenge_ragtop5",
      "acc,none": 0.42662116040955633,
      "acc_stderr,none": 0.014453185592920293,
      "acc_norm,none": 0.447098976109215,
      "acc_norm_stderr,none": 0.014529380160526848
    },
    "arc_easy_ragtop5": {
      "alias": "arc_easy_ragtop5",
      "acc,none": 0.7377946127946128,
      "acc_stderr,none": 0.009025197991724831,
      "acc_norm,none": 0.7121212121212122,
      "acc_norm_stderr,none": 0.009290733161670155
    },
    "boolq_ragtop5": {
      "alias": "boolq_ragtop5",
      "acc,none": 0.7761467889908257,
      "acc_stderr,none": 0.007290312360053287
    },
    "hellaswag_ragtop5": {
      "alias": "hellaswag_ragtop5",
      "acc,none": 0.5739892451702848,
      "acc_stderr,none": 0.004934846809827219,
      "acc_norm,none": 0.7571200955984864,
      "acc_norm_stderr,none": 0.004279467128560732
    },
    "openbookqa_ragtop5": {
      "alias": "openbookqa_ragtop5",
      "acc,none": 0.3,
      "acc_stderr,none": 0.020514426225628046,
      "acc_norm,none": 0.404,
      "acc_norm_stderr,none": 0.021966635293832915
    },
    "piqa_ragtop5": {
      "alias": "piqa_ragtop5",
      "acc,none": 0.763873775843308,
      "acc_stderr,none": 0.009908965890558216,
      "acc_norm,none": 0.7736670293797606,
      "acc_norm_stderr,none": 0.009763294246879427
    },
    "winogrande_ragtop5": {
      "alias": "winogrande_ragtop5",
      "acc,none": 0.6708760852407262,
      "acc_stderr,none": 0.013206387089091484
    }
  },
  "group_subtasks": {
    "arc_challenge_ragtop5": [],
    "arc_easy_ragtop5": [],
    "boolq_ragtop5": [],
    "hellaswag_ragtop5": [],
    "openbookqa_ragtop5": [],
    "piqa_ragtop5": [],
    "winogrande_ragtop5": []
  },
  "configs": {
    "arc_challenge_ragtop5": {
      "task": "arc_challenge_ragtop5",
      "dataset_path": "allenai/ai2_arc",
      "dataset_name": "ARC-Challenge",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7f6d0853d990>, doc_to_text_template='Question: {{question}}\\nAnswer:')",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
      "metadata": {
        "version": 1.0
      }
    },
    "arc_easy_ragtop5": {
      "task": "arc_easy_ragtop5",
      "dataset_path": "allenai/ai2_arc",
      "dataset_name": "ARC-Easy",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7f6cd01151b0>, doc_to_text_template='Question: {{question}}\\nAnswer:')",
      "doc_to_target": "{{choices.label.index(answerKey)}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "Question: {{question}}\nAnswer:",
      "metadata": {
        "version": 1.0
      }
    },
    "boolq_ragtop5": {
      "task": "boolq_ragtop5",
      "dataset_path": "super_glue",
      "dataset_name": "boolq",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7f6cd01145e0>, doc_to_text_template='{{passage}}\\nQuestion: {{question}}?\\nAnswer:')",
      "doc_to_target": "label",
      "doc_to_choice": [
        "no",
        "yes"
      ],
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc"
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "passage",
      "metadata": {
        "version": 2.0
      }
    },
    "hellaswag_ragtop5": {
      "task": "hellaswag_ragtop5",
      "dataset_path": "hellaswag",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7f6c7c77fa30>, question_field='query')",
      "doc_to_target": "{{label}}",
      "doc_to_choice": "choices",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "openbookqa_ragtop5": {
      "task": "openbookqa_ragtop5",
      "dataset_path": "openbookqa",
      "dataset_name": "main",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7f6c7c77f910>, question_field='question_stem')",
      "doc_to_target": "{{choices.label.index(answerKey.lstrip())}}",
      "doc_to_choice": "{{choices.text}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question_stem",
      "metadata": {
        "version": 1.0
      }
    },
    "piqa_ragtop5": {
      "task": "piqa_ragtop5",
      "dataset_path": "piqa",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "functools.partial(<function doc_to_text at 0x7f68f419dab0>, doc_to_text_template='Question: {{goal}}\\nAnswer:')",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sol1, sol2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "goal",
      "metadata": {
        "version": 1.0
      }
    },
    "winogrande_ragtop5": {
      "task": "winogrande_ragtop5",
      "dataset_path": "winogrande",
      "dataset_name": "winogrande_xl",
      "dataset_kwargs": {
        "trust_remote_code": true
      },
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "def doc_to_text(doc):\n    answer_to_num = {\"1\": 0, \"2\": 1}\n    return answer_to_num[doc[\"answer\"]]\n",
      "doc_to_target": "def doc_to_target(doc):\n    idx = doc[\"sentence\"].index(\"_\") + 1\n    return doc[\"sentence\"][idx:].strip()\n",
      "doc_to_choice": "functools.partial(<function _winogrande_doc_to_choice at 0x7f68ba18f520>, chunk=True)",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "arc_challenge_ragtop5": 1.0,
    "arc_easy_ragtop5": 1.0,
    "boolq_ragtop5": 2.0,
    "hellaswag_ragtop5": 1.0,
    "openbookqa_ragtop5": 1.0,
    "piqa_ragtop5": 1.0,
    "winogrande_ragtop5": 1.0
  },
  "n-shot": {
    "arc_challenge_ragtop5": 0,
    "arc_easy_ragtop5": 0,
    "boolq_ragtop5": 0,
    "hellaswag_ragtop5": 0,
    "openbookqa_ragtop5": 0,
    "piqa_ragtop5": 0,
    "winogrande_ragtop5": 0
  },
  "higher_is_better": {
    "arc_challenge_ragtop5": {
      "acc": true,
      "acc_norm": true
    },
    "arc_easy_ragtop5": {
      "acc": true,
      "acc_norm": true
    },
    "boolq_ragtop5": {
      "acc": true
    },
    "hellaswag_ragtop5": {
      "acc": true,
      "acc_norm": true
    },
    "openbookqa_ragtop5": {
      "acc": true,
      "acc_norm": true
    },
    "piqa_ragtop5": {
      "acc": true,
      "acc_norm": true
    },
    "winogrande_ragtop5": {
      "acc": true
    }
  },
  "n-samples": {
    "winogrande_ragtop5": {
      "original": 1267,
      "effective": 1267
    },
    "piqa_ragtop5": {
      "original": 1838,
      "effective": 1838
    },
    "openbookqa_ragtop5": {
      "original": 500,
      "effective": 500
    },
    "hellaswag_ragtop5": {
      "original": 10042,
      "effective": 10042
    },
    "boolq_ragtop5": {
      "original": 3270,
      "effective": 3270
    },
    "arc_easy_ragtop5": {
      "original": 2376,
      "effective": 2376
    },
    "arc_challenge_ragtop5": {
      "original": 1172,
      "effective": 1172
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=meta-llama/Llama-2-7b-chat-hf,dtype=bfloat16",
    "model_num_parameters": 6738415616,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "f5db02db724555f92da89c216ac04704f23d4590",
    "batch_size": "16",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "5523a2a",
  "date": 1736466503.0806038,
  "pretty_env_info": "PyTorch version: 2.5.1+cu124\nIs debug build: False\nCUDA used to build PyTorch: 12.4\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 22.04.5 LTS (x86_64)\nGCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.35\n\nPython version: 3.10.12 (main, Nov  6 2024, 20:22:13) [GCC 11.4.0] (64-bit runtime)\nPython platform: Linux-5.15.0-122-generic-x86_64-with-glibc2.35\nIs CUDA available: True\nCUDA runtime version: 12.4.131\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100-SXM4-80GB\nGPU 1: NVIDIA A100-SXM4-80GB\n\nNvidia driver version: 550.90.12\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.9.7\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.9.7\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                         x86_64\nCPU op-mode(s):                       32-bit, 64-bit\nAddress sizes:                        48 bits physical, 48 bits virtual\nByte Order:                           Little Endian\nCPU(s):                               44\nOn-line CPU(s) list:                  0-43\nVendor ID:                            AuthenticAMD\nModel name:                           AMD EPYC 7642 48-Core Processor\nCPU family:                           23\nModel:                                49\nThread(s) per core:                   1\nCore(s) per socket:                   1\nSocket(s):                            44\nStepping:                             0\nBogoMIPS:                             4599.99\nFlags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm rep_good nopl cpuid extd_apicid tsc_known_freq pni pclmulqdq ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm cmp_legacy svm cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw perfctr_core ssbd ibrs ibpb stibp vmmcall fsgsbase tsc_adjust bmi1 avx2 smep bmi2 rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 clzero xsaveerptr wbnoinvd arat npt lbrv nrip_save tsc_scale vmcb_clean pausefilter pfthreshold v_vmsave_vmload vgif umip rdpid arch_capabilities\nVirtualization:                       AMD-V\nHypervisor vendor:                    KVM\nVirtualization type:                  full\nL1d cache:                            2.8 MiB (44 instances)\nL1i cache:                            2.8 MiB (44 instances)\nL2 cache:                             22 MiB (44 instances)\nL3 cache:                             704 MiB (44 instances)\nNUMA node(s):                         1\nNUMA node0 CPU(s):                    0-43\nVulnerability Gather data sampling:   Not affected\nVulnerability Itlb multihit:          Not affected\nVulnerability L1tf:                   Not affected\nVulnerability Mds:                    Not affected\nVulnerability Meltdown:               Not affected\nVulnerability Mmio stale data:        Not affected\nVulnerability Reg file data sampling: Not affected\nVulnerability Retbleed:               Mitigation; untrained return thunk; SMT disabled\nVulnerability Spec rstack overflow:   Mitigation; SMT disabled\nVulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                  Not affected\nVulnerability Tsx async abort:        Not affected\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.4\n[pip3] torch==2.5.1\n[pip3] torchvision==0.20.1\n[pip3] triton==3.1.0\n[conda] Could not collect",
  "transformers_version": "4.47.1",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<unk>",
    "0"
  ],
  "tokenizer_eos_token": [
    "</s>",
    "2"
  ],
  "tokenizer_bos_token": [
    "<s>",
    "1"
  ],
  "eot_token_id": 2,
  "max_length": 4096,
  "task_hashes": {},
  "model_source": "hf",
  "model_name": "meta-llama/Llama-2-7b-chat-hf",
  "model_name_sanitized": "meta-llama__Llama-2-7b-chat-hf",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 27414.84616316,
  "end_time": 33745.41170701,
  "total_evaluation_time_seconds": "6330.565543849996"
}